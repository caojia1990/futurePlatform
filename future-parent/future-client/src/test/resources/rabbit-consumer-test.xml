<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/rabbit
       http://www.springframework.org/schema/rabbit/spring-rabbit.xsd">
       
    <rabbit:annotation-driven/>
    
    <rabbit:connection-factory id="connectionFactory" host="${rabbit.host}" username="${rabbit.username}" password="${rabbit.password}"/>
    <rabbit:admin connection-factory="connectionFactory" />
    
    <rabbit:template id="tradeTemplate" connection-factory="connectionFactory"
        message-converter="messageConverter"/>
    
    <!-- <rabbit:topic-exchange id="onRtnOrderExchange" name="future.order.onRtnOrder">
    </rabbit:topic-exchange>
    <rabbit:topic-exchange id="onRtnTradeExchange" name="future.order.onRtnTrade">
    </rabbit:topic-exchange>
    <rabbit:topic-exchange name="future.order.onRspOrderInsert">
    </rabbit:topic-exchange>
    <rabbit:topic-exchange name="future.order.onRspOrderAction">
    </rabbit:topic-exchange>
    <rabbit:topic-exchange name="future.order.onRspError">
    </rabbit:topic-exchange>
    <rabbit:topic-exchange name="future.order.onErrRtnOrderInsert">
    </rabbit:topic-exchange>
    
    <rabbit:queue id="onRtnOrderQ" ></rabbit:queue>
    <rabbit:queue id="onRtnTradeQ" ></rabbit:queue>
    <rabbit:queue id="onRspOrderInsertQ" ></rabbit:queue>
    <rabbit:queue id="onRspOrderActionQ" ></rabbit:queue>
    <rabbit:queue id="onRspErrorQ" ></rabbit:queue>
    <rabbit:queue id="onErrRtnOrderInsertQ" ></rabbit:queue> -->
    
    <!-- 行情队列 -->
    <rabbit:topic-exchange name="com.future.market">
    </rabbit:topic-exchange>
    <rabbit:queue id="marketQ"></rabbit:queue>
    
    <!-- 设置监听 -->
    <rabbit:listener-container connection-factory="connectionFactory" message-converter="messageConverter" >
        <!-- <rabbit:listener ref="messageHandle" queues="onRtnOrderQ" method="onRtnOrder"/>
        <rabbit:listener ref="messageHandle" queues="onRtnTradeQ" method="onRtnTrade"/>
        <rabbit:listener ref="messageHandle" queues="onRspOrderInsertQ" method="onRspOrderInsert"/>
        <rabbit:listener ref="messageHandle" queues="onRspOrderActionQ" method="onRspOrderAction"/>
        <rabbit:listener ref="messageHandle" queues="onRspErrorQ" method="onRspError"/>
        <rabbit:listener ref="messageHandle" queues="onErrRtnOrderInsertQ" method="onErrRtnOrderInsert"/>
        <rabbit:listener ref="messageHandle" queues="onErrRtnOrderInsertQ" method="onErrRtnOrderInsert"/> -->
        <rabbit:listener ref="marketMessageHandle" queues="marketQ" method="handleMessage"/>
    </rabbit:listener-container>
    
    <!-- 交易消息处理 -->
    <!-- <bean id="messageHandle" class="com.future.client.mq.OrderMessageHandle" /> -->
    <!-- 行情消息处理 -->
    <bean id="marketMessageHandle" class="com.future.client.mq.MarketHandleTest" />
       
    <!-- json转换器，消息可以自动根据转换器转换格式，不配置时默认为java序列化，可以自行配置 -->
    <bean id="messageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
</beans>       
